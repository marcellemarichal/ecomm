openapi: 3.0.3
info:
  title: Ecomm project API
  description: API desenvolvida para documentar o projeto Ecomm, durante o treinamento sobre HTTP e Swagger da Alura e PagoNxt
  version: 0.1.0
  termsOfService: https://developers.google.com/mobile/terms?hl=pt-br
  contact:
    name: Marcelle Marichal da Rosa
    email: marcelle.rosa@pagonxt.com
  license:
    name: Licença GPLv3
    url: https://www.gnu.org/licenses/quick-guide-gplv3.pt-br.html
externalDocs:
  description: Documentação
  url: https://github.com/marcellemarichal
components:
  schemas:
    categoria:
      type: object
      properties:
        id:
          type: integer
        nome:
          type: string
        status:
          type: string
          enum: [ATIVA, INATIVA]
    produto:
      type: object
      properties:
        id: 
          type: integer
        PRODUTO:
          type: string
        DESCRICAO:
          type: string
        SLUG:
          type: string
        PREÇO_UNITARIO:
          type: string
        QUANTIDADE_EM_ESTOQUE:
          type: integer
        ID_CATEGORIA:
          type: integer
paths:
  /api/categories:
    get:
      tags:
      - Categorias
      summary: Listagem das categorias existentes
      responses:
        200: 
          description: Sucesso
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/categoria"
  /api/categories/{id}:
    parameters: 
      - name: id
        in: path
        schema: 
          type: integer
        required: true
    get:
      tags:
      - Categorias
      summary: Busca de categorias pelo ID
      responses:
        200:
          description: Sucesso
          content:
            application/json:
              schema:
                  type: array
                  items:
                    $ref: "#/components/schemas/categoria"
        404:
          description: Categoria não encontrada
          content:
            application/json:
              example: "Not Found"
  /api/admin/categories:
    post:
      tags:
      - Categorias
      summary: Inserção de categorias
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                nome:
                  type: string
                status:
                    type: string
                    enum: [ATIVA, INATIVA]
      responses:
        201:
          description: Sucesso
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  nome:
                    type: string
                  status:
                    type: string
                    enum: [ATIVA, INATIVA]
  /api/admin/categories/{id}:
    parameters: 
      - name: id
        in: path
        schema: 
          type: integer
        required: true
    put:
      tags:
      - Categorias
      summary: Alteração dos dados de categorias pelo ID
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/categoria"
      responses:
        202:
          description: Sucesso
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/categoria"
        401:
          description: Não autorizado
          content:
            applicaton/json:
              example: Você não está autorizado a realizar esta ação
    patch:
      tags:
      - Categorias
      summary: Ativação de uma categoria pelo ID
      responses:
        202:
          description: Sucesso
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/categoria"
        404:
          description: Categoria não encontrada
          content:
            application/json:
              example: Esta categoria não foi encontrada
    delete:
      tags:
      - Categorias
      summary: Remoção de uma categoria pelo ID
      responses:
        200:
          description: Sucesso
          content:
            application/json:
              example: Categoria removida com sucesso
        404:
          description: Categoria não encontrada
          content:
            application/json:
              example: Esta categoria não foi encontrada
  /api/products:
    get:
      tags:
      - Produtos
      summary: Listagem dos produtos existentes
      responses:
        200: 
          description: Sucesso
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/produto"       
  /api/products/{id}:
    parameters: 
      - name: id
        in: path
        schema: 
          type: integer
        required: true
    get:
      tags:
      - Produtos
      summary: Detalhamento de produtos pelo ID
      responses:
        200:
          description: Sucesso
          content:
            application/json:
              schema:
                  type: array
                  items:
                    $ref: "#/components/schemas/produto"
        404:
          description: Produto não encontrado
          content:
            application/json:
              example: "Not Found"
  /api/admin/products:
    post:
      tags:
      - Produtos
      summary: Inserção de novos produtos
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                PRODUTO:
                  type: string
                DESCRICAO:
                  type: string
                SLUG:
                  type: string
                PREÇO_UNITARIO:
                  type: string
                QUANTIDADE_EM_ESTOQUE:
                  type: integer
                ID_CATEGORIA:
                  type: integer
      responses:
        201:
          description: Sucesso
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/produto"
  /api/admin/products/{id}:
    parameters: 
      - name: id
        in: path
        schema: 
          type: integer
        required: true
    put:
      tags:
      - Produtos
      summary: Alteração dos dados de produtos pelo ID
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/produto"
      responses:
        202:
          description: Sucesso
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/produto"
        401:
          description: Não autorizado
          content:
            applicaton/json:
              example: Você não está autorizado a realizar esta ação
    delete:
      tags:
      - Produtos
      summary: Remoção de um produto pelo ID
      responses:
        200:
          description: Sucesso
          content:
            application/json:
              example: Produto removido com sucesso
        404:
          description: Produto não encontrado
          content:
            application/json:
              example: Este produto não foi encontrado